// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for android - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for ios - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyD6ThyO9OEafFORzyd5lRvlEL5xPu3kGDg',
    appId: '1:1027984147993:ios:6d3d1c13724ad9cbdc0c88',
    messagingSenderId: '1027984147993',
    projectId: 'sfera2-ee936',
    storageBucket: 'sfera2-ee936.appspot.com',
    iosClientId:
        '1027984147993-3k9a1rb53f7oi3csr8hsseovir258ild.apps.googleusercontent.com',
    iosBundleId: 'com.example.sferaApp1',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyCJl_GXfFy-BIeHmWKwM-7XAGk-3TCkY8g',
    appId: '1:1027984147993:web:71e49f803414cd8bdc0c88',
    messagingSenderId: '1027984147993',
    projectId: 'sfera2-ee936',
    authDomain: 'sfera2-ee936.firebaseapp.com',
    storageBucket: 'sfera2-ee936.appspot.com',
  );

  static const FirebaseOptions linux = FirebaseOptions(
    apiKey: 'AIzaSyCJl_GXfFy-BIeHmWKwM-7XAGk-3TCkY8g',
    appId: '1:1027984147993:web:b969f9824e884bb0dc0c88',
    messagingSenderId: '1027984147993',
    projectId: 'sfera2-ee936',
    authDomain: 'sfera2-ee936.firebaseapp.com',
    storageBucket: 'sfera2-ee936.appspot.com',
  );
}
